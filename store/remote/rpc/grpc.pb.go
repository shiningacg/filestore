// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type File struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	Size                 uint64   `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{0}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *File) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UUID struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{1}
}

func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (m *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(m, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{2}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type SpaceInfo struct {
	Cap                  uint64   `protobuf:"varint,1,opt,name=Cap,proto3" json:"Cap,omitempty"`
	Total                uint64   `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	Free                 uint64   `protobuf:"varint,3,opt,name=Free,proto3" json:"Free,omitempty"`
	Used                 uint64   `protobuf:"varint,4,opt,name=Used,proto3" json:"Used,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpaceInfo) Reset()         { *m = SpaceInfo{} }
func (m *SpaceInfo) String() string { return proto.CompactTextString(m) }
func (*SpaceInfo) ProtoMessage()    {}
func (*SpaceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{3}
}

func (m *SpaceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpaceInfo.Unmarshal(m, b)
}
func (m *SpaceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpaceInfo.Marshal(b, m, deterministic)
}
func (m *SpaceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpaceInfo.Merge(m, src)
}
func (m *SpaceInfo) XXX_Size() int {
	return xxx_messageInfo_SpaceInfo.Size(m)
}
func (m *SpaceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SpaceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SpaceInfo proto.InternalMessageInfo

func (m *SpaceInfo) GetCap() uint64 {
	if m != nil {
		return m.Cap
	}
	return 0
}

func (m *SpaceInfo) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SpaceInfo) GetFree() uint64 {
	if m != nil {
		return m.Free
	}
	return 0
}

func (m *SpaceInfo) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

type NetworkInfo struct {
	Upload               uint64   `protobuf:"varint,1,opt,name=Upload,proto3" json:"Upload,omitempty"`
	Download             uint64   `protobuf:"varint,2,opt,name=Download,proto3" json:"Download,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInfo) Reset()         { *m = NetworkInfo{} }
func (m *NetworkInfo) String() string { return proto.CompactTextString(m) }
func (*NetworkInfo) ProtoMessage()    {}
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{4}
}

func (m *NetworkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInfo.Unmarshal(m, b)
}
func (m *NetworkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInfo.Marshal(b, m, deterministic)
}
func (m *NetworkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInfo.Merge(m, src)
}
func (m *NetworkInfo) XXX_Size() int {
	return xxx_messageInfo_NetworkInfo.Size(m)
}
func (m *NetworkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInfo proto.InternalMessageInfo

func (m *NetworkInfo) GetUpload() uint64 {
	if m != nil {
		return m.Upload
	}
	return 0
}

func (m *NetworkInfo) GetDownload() uint64 {
	if m != nil {
		return m.Download
	}
	return 0
}

type GatewayInfo struct {
	Visit                uint64   `protobuf:"varint,1,opt,name=Visit,proto3" json:"Visit,omitempty"`
	DayVisit             uint64   `protobuf:"varint,2,opt,name=DayVisit,proto3" json:"DayVisit,omitempty"`
	HourVisit            uint64   `protobuf:"varint,3,opt,name=HourVisit,proto3" json:"HourVisit,omitempty"`
	Bandwidth            uint64   `protobuf:"varint,4,opt,name=Bandwidth,proto3" json:"Bandwidth,omitempty"`
	DayBandwidth         uint64   `protobuf:"varint,5,opt,name=DayBandwidth,proto3" json:"DayBandwidth,omitempty"`
	HourBandwidth        uint64   `protobuf:"varint,6,opt,name=HourBandwidth,proto3" json:"HourBandwidth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayInfo) Reset()         { *m = GatewayInfo{} }
func (m *GatewayInfo) String() string { return proto.CompactTextString(m) }
func (*GatewayInfo) ProtoMessage()    {}
func (*GatewayInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_bedfbfc9b54e5600, []int{5}
}

func (m *GatewayInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayInfo.Unmarshal(m, b)
}
func (m *GatewayInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayInfo.Marshal(b, m, deterministic)
}
func (m *GatewayInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayInfo.Merge(m, src)
}
func (m *GatewayInfo) XXX_Size() int {
	return xxx_messageInfo_GatewayInfo.Size(m)
}
func (m *GatewayInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayInfo proto.InternalMessageInfo

func (m *GatewayInfo) GetVisit() uint64 {
	if m != nil {
		return m.Visit
	}
	return 0
}

func (m *GatewayInfo) GetDayVisit() uint64 {
	if m != nil {
		return m.DayVisit
	}
	return 0
}

func (m *GatewayInfo) GetHourVisit() uint64 {
	if m != nil {
		return m.HourVisit
	}
	return 0
}

func (m *GatewayInfo) GetBandwidth() uint64 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *GatewayInfo) GetDayBandwidth() uint64 {
	if m != nil {
		return m.DayBandwidth
	}
	return 0
}

func (m *GatewayInfo) GetHourBandwidth() uint64 {
	if m != nil {
		return m.HourBandwidth
	}
	return 0
}

func init() {
	proto.RegisterType((*File)(nil), "File")
	proto.RegisterType((*UUID)(nil), "UUID")
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*SpaceInfo)(nil), "SpaceInfo")
	proto.RegisterType((*NetworkInfo)(nil), "NetworkInfo")
	proto.RegisterType((*GatewayInfo)(nil), "GatewayInfo")
}

func init() { proto.RegisterFile("grpc.proto", fileDescriptor_bedfbfc9b54e5600) }

var fileDescriptor_bedfbfc9b54e5600 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0xb1, 0x6e, 0xe2, 0x40,
	0x14, 0xb4, 0xcf, 0x5e, 0x73, 0x3c, 0x38, 0xe9, 0xf4, 0xc4, 0x21, 0x9f, 0x75, 0x27, 0x71, 0x7b,
	0x29, 0xa8, 0x5c, 0x24, 0x65, 0x2a, 0x08, 0x81, 0xd0, 0x50, 0x98, 0x90, 0x22, 0xa9, 0x36, 0x78,
	0x93, 0x58, 0x01, 0xd6, 0x32, 0x9b, 0x58, 0xce, 0xc7, 0xa5, 0xcb, 0x7f, 0x45, 0xbb, 0x6b, 0x6c,
	0x93, 0x6e, 0x66, 0xde, 0x78, 0xde, 0xd3, 0x8e, 0x01, 0x1e, 0xb3, 0x74, 0x1d, 0xa6, 0x99, 0x90,
	0x82, 0x8e, 0xc1, 0x9d, 0x26, 0x1b, 0x8e, 0x08, 0xee, 0x6a, 0x35, 0x9f, 0xf8, 0xf6, 0xc0, 0x1e,
	0xb6, 0x23, 0x8d, 0x95, 0xb6, 0x4c, 0xde, 0xb8, 0xef, 0x0c, 0xec, 0xa1, 0x1b, 0x69, 0xac, 0xb4,
	0x05, 0xdb, 0x72, 0xdf, 0x35, 0x3e, 0x85, 0x69, 0x00, 0x95, 0xff, 0x6b, 0x06, 0x6d, 0x01, 0xb9,
	0xdc, 0xa6, 0xb2, 0xa0, 0x77, 0xd0, 0x5e, 0xa6, 0x6c, 0xcd, 0xe7, 0xbb, 0x07, 0x81, 0x3f, 0xc1,
	0xb9, 0x60, 0xa9, 0x36, 0xba, 0x91, 0x82, 0xd8, 0x03, 0x72, 0x2d, 0x24, 0xdb, 0xf8, 0xdf, 0xb4,
	0x66, 0x88, 0x4a, 0x9c, 0x66, 0xbc, 0xba, 0x40, 0x61, 0xbd, 0x65, 0xcf, 0x63, 0x7d, 0x81, 0x1b,
	0x69, 0x4c, 0x47, 0xd0, 0x59, 0x70, 0x99, 0x8b, 0xec, 0x59, 0xc7, 0xf7, 0xc1, 0x5b, 0xa5, 0x1b,
	0xc1, 0xe2, 0x72, 0x43, 0xc9, 0x30, 0x80, 0xef, 0x13, 0x91, 0xef, 0xf4, 0xc4, 0xec, 0xa9, 0x38,
	0xfd, 0xb0, 0xa1, 0x33, 0x63, 0x92, 0xe7, 0xac, 0xd0, 0x19, 0x3d, 0x20, 0x37, 0xc9, 0x3e, 0x91,
	0x65, 0x84, 0x21, 0x3a, 0x81, 0x15, 0x66, 0x70, 0x48, 0x28, 0x39, 0xfe, 0x81, 0xf6, 0x95, 0x78,
	0xc9, 0xcc, 0xd0, 0x5c, 0x5c, 0x0b, 0x6a, 0x3a, 0x66, 0xbb, 0x38, 0x4f, 0x62, 0xf9, 0x54, 0xde,
	0x5e, 0x0b, 0x48, 0xa1, 0x3b, 0x61, 0x45, 0x6d, 0x20, 0xda, 0x70, 0xa4, 0xe1, 0x09, 0xfc, 0x50,
	0x71, 0xb5, 0xc9, 0xd3, 0xa6, 0x63, 0xf1, 0xf4, 0xdd, 0x86, 0x4e, 0xc4, 0xb7, 0x42, 0xf2, 0xa5,
	0x14, 0x19, 0xc7, 0x5f, 0xe0, 0xcc, 0xb8, 0x44, 0x12, 0xaa, 0x3a, 0x02, 0x12, 0xaa, 0xb6, 0xa9,
	0x85, 0x7d, 0x70, 0x46, 0x71, 0x8c, 0x86, 0x07, 0x5e, 0x68, 0x4a, 0xb2, 0xf0, 0x37, 0x78, 0xea,
	0xeb, 0x57, 0x7e, 0xf8, 0xa2, 0x1e, 0xfd, 0x05, 0xa2, 0x1b, 0xc4, 0x52, 0x0a, 0x20, 0xac, 0x1a,
	0xa5, 0x16, 0xfe, 0x83, 0x56, 0xd9, 0x41, 0x65, 0xe8, 0x86, 0x8d, 0x56, 0xa8, 0x85, 0xff, 0x1b,
	0x6f, 0xd0, 0x30, 0x35, 0x9e, 0x9d, 0x5a, 0xe3, 0xd6, 0x2d, 0x09, 0xcf, 0xb3, 0x74, 0x7d, 0xef,
	0xe9, 0x3f, 0xf4, 0xec, 0x33, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x99, 0x54, 0x03, 0xaf, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RemoteStoreClient is the client API for RemoteStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteStoreClient interface {
	// 获取下载地址
	Get(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*File, error)
	// 获取上传地址
	Add(ctx context.Context, in *File, opts ...grpc.CallOption) (*Empty, error)
	// 删除文件
	Remove(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*Empty, error)
	// 获取存储信息
	Space(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SpaceInfo, error)
	// 查询网络状况
	Network(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NetworkInfo, error)
	// 查询流量情况
	Bandwidth(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GatewayInfo, error)
}

type remoteStoreClient struct {
	cc *grpc.ClientConn
}

func NewRemoteStoreClient(cc *grpc.ClientConn) RemoteStoreClient {
	return &remoteStoreClient{cc}
}

func (c *remoteStoreClient) Get(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*File, error) {
	out := new(File)
	err := c.cc.Invoke(ctx, "/RemoteStore/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) Add(ctx context.Context, in *File, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/RemoteStore/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) Remove(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/RemoteStore/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) Space(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SpaceInfo, error) {
	out := new(SpaceInfo)
	err := c.cc.Invoke(ctx, "/RemoteStore/Space", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) Network(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NetworkInfo, error) {
	out := new(NetworkInfo)
	err := c.cc.Invoke(ctx, "/RemoteStore/Network", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteStoreClient) Bandwidth(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GatewayInfo, error) {
	out := new(GatewayInfo)
	err := c.cc.Invoke(ctx, "/RemoteStore/Bandwidth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteStoreServer is the server API for RemoteStore service.
type RemoteStoreServer interface {
	// 获取下载地址
	Get(context.Context, *UUID) (*File, error)
	// 获取上传地址
	Add(context.Context, *File) (*Empty, error)
	// 删除文件
	Remove(context.Context, *UUID) (*Empty, error)
	// 获取存储信息
	Space(context.Context, *Empty) (*SpaceInfo, error)
	// 查询网络状况
	Network(context.Context, *Empty) (*NetworkInfo, error)
	// 查询流量情况
	Bandwidth(context.Context, *Empty) (*GatewayInfo, error)
}

func RegisterRemoteStoreServer(s *grpc.Server, srv RemoteStoreServer) {
	s.RegisterService(&_RemoteStore_serviceDesc, srv)
}

func _RemoteStore_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RemoteStore/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).Get(ctx, req.(*UUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(File)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RemoteStore/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).Add(ctx, req.(*File))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RemoteStore/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).Remove(ctx, req.(*UUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_Space_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).Space(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RemoteStore/Space",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).Space(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_Network_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).Network(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RemoteStore/Network",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).Network(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RemoteStore_Bandwidth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteStoreServer).Bandwidth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/RemoteStore/Bandwidth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteStoreServer).Bandwidth(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _RemoteStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "RemoteStore",
	HandlerType: (*RemoteStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _RemoteStore_Get_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _RemoteStore_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _RemoteStore_Remove_Handler,
		},
		{
			MethodName: "Space",
			Handler:    _RemoteStore_Space_Handler,
		},
		{
			MethodName: "Network",
			Handler:    _RemoteStore_Network_Handler,
		},
		{
			MethodName: "Bandwidth",
			Handler:    _RemoteStore_Bandwidth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc.proto",
}
